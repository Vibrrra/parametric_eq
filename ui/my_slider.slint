export component MySlider inherits Rectangle {
    in-out property<float> maximum: 100;
    in-out property<float> minimum: 0;
    in-out property<float> value;

    min-height: 24px;
    min-width: 100px;
    horizontal-stretch: 1;
    vertical-stretch: 0;

    border-radius: root.height/2;
    background: touch.pressed ? #eee: #ddd;
    border-width: 1px;
    border-color: root.background.darker(25%);

    handle := Rectangle {
        width: self.height;
        height: parent.height;
        border-width: 3px;
        border-radius: self.height / 2;
        background: touch.pressed ? #f8f: touch.has-hover ? #66f : #0000ff;
        border-color: self.background.darker(15%);
        x: (root.width - handle.width) * (root.value - root.minimum)/(root.maximum - root.minimum);
    }
    touch := TouchArea {
        property <float> pressed-value;
        pointer-event(event) => {
            if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                self.pressed-value = root.value;
            }
        }
        moved => {
            if (self.enabled && self.pressed) {
                root.value = max(root.minimum, min(root.maximum,
                    self.pressed-value + (touch.mouse-x - touch.pressed-x) * (root.maximum - root.minimum) / (root.width - handle.width)));

            }
        }
    }
}





export component Example inherits Window {
    width: 500px;
    height: 500px;
    in-out property <bool> signal;
    in-out property <bool> a_act;
    in-out property <bool> b_act;

    callback mass_reset(int);
    mass_reset(a_id) => {
        if (a_id != 0) {
            a_act = true;
            r1.x = 50px;

        } else if (a_id != 1) {
            b_act = true;
            r2.x = 50px;
        }
    }

     
    ba := Rectangle {
        background: yellow;
        out property <int> id;
        ta := TouchArea {
            // pointer-event(event) => {
            //     if (event.kind == PointerEventKind.move) {
            //         mass_reset(id);
            //         r1.x = 150px;
            //     } else {

            //     }
            // }
        }
        Text {text: ta.has-hover ? "H" : "nH";}  
    }
    r1 := Rectangle {
        out property <int> id: 0;
        width: 50px;
        height: 50px;
        background: black;
        x: 50px ;
        // x: 50px;
        y: 50px;
        
            tr:=TouchArea {
                pointer-event(event) => {
                    if (event.kind == PointerEventKind.move) {
                        mass_reset(id);
                        r1.x = 1500px;
                        
                    } 
                }
        }
    }
    r2 := Rectangle {
        out property <int> id: 1;
        width: 50px;
        height: 50px;
        background: black;
        x: b_act ? 50px : 100px;
        y: 150px;
        
            tr2 := TouchArea {
                pointer-event(event) => {
                    if (event.kind == PointerEventKind.move) {
                    
                        mass_reset(id);
                        r2.x = 1500px;
                        
                    } 
                }
        }
    }
}